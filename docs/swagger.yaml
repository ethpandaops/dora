basePath: /api
definitions:
  api.APIConsensusClientMetadata:
    properties:
      attnets:
        type: string
      custody_group_count:
        description: MetadataV3 field for Fulu
        type: string
      seq_number:
        type: string
      syncnets:
        type: string
    type: object
  api.APIConsensusClientNodeInfo:
    properties:
      client_name:
        type: string
      client_type:
        type: string
      column_indexes:
        items:
          type: integer
        type: array
      enr:
        type: string
      enr_decoded:
        additionalProperties: true
        type: object
      head_root:
        type: string
      head_slot:
        type: integer
      last_error:
        type: string
      last_refresh:
        type: string
      metadata:
        $ref: '#/definitions/api.APIConsensusClientMetadata'
      node_id:
        type: string
      peer_count:
        type: integer
      peer_id:
        type: string
      peers_inbound:
        type: integer
      peers_outbound:
        type: integer
      status:
        type: string
      supports_data_column:
        type: boolean
      version:
        type: string
    type: object
  api.APIConsensusClientsResponse:
    properties:
      clients:
        items:
          $ref: '#/definitions/api.APIConsensusClientNodeInfo'
        type: array
      count:
        type: integer
    type: object
  api.APIDasGuardianEvalResult:
    properties:
      column_idx:
        items:
          type: integer
        type: array
      downloaded_result:
        items:
          items:
            type: string
          type: array
        type: array
      error:
        type: string
      node_id:
        type: string
      slots:
        items:
          type: integer
        type: array
      valid_column:
        items:
          items:
            type: boolean
          type: array
        type: array
      valid_kzg:
        items:
          items:
            type: string
          type: array
        type: array
      valid_slot:
        items:
          type: boolean
        type: array
    type: object
  api.APIDasGuardianMassScanRequest:
    properties:
      random_count:
        description: 'Number of random slots to select (default: 4)'
        type: integer
      random_mode:
        description: 'Random slot selection mode: "non_missed", "with_blobs", "available"'
        type: string
      slots:
        description: Optional slot numbers to scan
        items:
          type: integer
        type: array
    type: object
  api.APIDasGuardianMassScanResponse:
    properties:
      error:
        type: string
      results:
        additionalProperties:
          $ref: '#/definitions/api.APIMassNodeResult'
        description: ENR -> node result
        type: object
      slots:
        description: The slots that were scanned
        items:
          type: integer
        type: array
      success:
        type: boolean
    type: object
  api.APIDasGuardianMetadata:
    properties:
      attnets:
        type: string
      custody_group_count:
        type: integer
      seq_number:
        type: integer
      syncnets:
        type: string
    type: object
  api.APIDasGuardianScanRequest:
    properties:
      enr:
        type: string
      random_count:
        description: 'Number of random slots to select (default: 4)'
        type: integer
      random_mode:
        description: 'Random slot selection mode: "non_missed", "with_blobs", "available"'
        type: string
      slots:
        description: Optional slot numbers to scan
        items:
          type: integer
        type: array
    type: object
  api.APIDasGuardianScanResponse:
    properties:
      error:
        type: string
      result:
        $ref: '#/definitions/api.APIDasGuardianScanResult'
      success:
        type: boolean
    type: object
  api.APIDasGuardianScanResult:
    properties:
      eval_result:
        allOf:
        - $ref: '#/definitions/api.APIDasGuardianEvalResult'
        description: DAS Evaluation Result
      libp2p_info:
        additionalProperties: true
        description: P2P Information
        type: object
      remote_metadata:
        allOf:
        - $ref: '#/definitions/api.APIDasGuardianMetadata'
        description: Metadata (from RemoteMetadata)
      remote_status:
        allOf:
        - $ref: '#/definitions/api.APIDasGuardianStatus'
        description: Status Information (from RemoteStatus)
    type: object
  api.APIDasGuardianStatus:
    properties:
      earliest_slot:
        type: integer
      finalized_epoch:
        type: integer
      finalized_root:
        type: string
      fork_digest:
        type: string
      head_root:
        type: string
      head_slot:
        type: integer
    type: object
  api.APIEpochResponseV1:
    properties:
      attestationscount:
        type: integer
      attesterslashingscount:
        type: integer
      averagevalidatorbalance:
        type: integer
      blockscount:
        type: integer
      depositscount:
        type: integer
      eligibleether:
        type: integer
      epoch:
        type: integer
      finalized:
        type: boolean
      globalparticipationrate:
        type: integer
      missedblocks:
        type: integer
      orphanedblocks:
        type: integer
      proposedblocks:
        type: integer
      proposerslashingscount:
        type: integer
      rewards_exported:
        type: integer
      scheduledblocks:
        type: integer
      totalvalidatorbalance:
        type: integer
      ts:
        type: integer
      validatorscount:
        type: integer
      voluntaryexitscount:
        type: integer
      votedether:
        type: integer
      withdrawalcount:
        type: integer
    type: object
  api.APIExecutionClientNodeInfo:
    properties:
      client_name:
        type: string
      enode:
        type: string
      ip:
        type: string
      last_update:
        type: string
      node_id:
        type: string
      port:
        type: integer
      status:
        type: string
      version:
        type: string
    type: object
  api.APIExecutionClientsResponse:
    properties:
      clients:
        items:
          $ref: '#/definitions/api.APIExecutionClientNodeInfo'
        type: array
      count:
        type: integer
    type: object
  api.APIMassNodeResult:
    properties:
      custody_columns:
        description: Custody column indices
        items:
          type: integer
        type: array
      custody_group_count:
        description: CGC from node metadata
        type: integer
      earliest_slot:
        description: Earliest available slot from node status
        type: integer
      error:
        type: string
      node_alias:
        type: string
      slot_results:
        additionalProperties:
          $ref: '#/definitions/api.SlotResult'
        description: Slot -> result details
        type: object
      success:
        type: boolean
      total_columns:
        description: Total number of columns per slot
        type: integer
      valid_columns:
        description: Per-slot array of column validity
        items:
          items:
            type: boolean
          type: array
        type: array
    type: object
  api.APISlotData:
    properties:
      attestationscount:
        type: integer
      attesterslashingscount:
        type: integer
      blob_count:
        type: integer
      blockroot:
        type: string
      depositscount:
        type: integer
      epoch:
        type: integer
      exec_base_fee_per_gas:
        type: integer
      exec_block_hash:
        type: string
      exec_block_number:
        type: integer
      exec_extra_data:
        type: string
      exec_fee_recipient:
        type: string
      exec_gas_limit:
        type: integer
      exec_gas_used:
        type: integer
      exec_transactions_count:
        type: integer
      graffiti:
        type: string
      graffiti_text:
        type: string
      parentroot:
        type: string
      proposer:
        type: integer
      proposerslashingscount:
        type: integer
      slot:
        type: integer
      stateroot:
        type: string
      status:
        type: string
      syncaggregate_participation:
        type: number
      voluntaryexitscount:
        type: integer
      withdrawalcount:
        type: integer
    type: object
  api.APISlotListItem:
    properties:
      attestation_count:
        type: integer
      attester_slashing_count:
        type: integer
      avg_exec_time:
        type: integer
      blob_count:
        type: integer
      block_root:
        type: string
      block_size:
        type: integer
      deposit_count:
        type: integer
      el_extra_data:
        type: string
      epoch:
        type: integer
      eth_block_number:
        type: integer
      eth_transaction_count:
        type: integer
      execution_times:
        items:
          $ref: '#/definitions/models.ExecutionTimeDetail'
        type: array
      exit_count:
        type: integer
      finalized:
        type: boolean
      gas_limit:
        type: integer
      gas_used:
        type: integer
      graffiti:
        type: string
      graffiti_text:
        type: string
      is_mev_block:
        type: boolean
      max_exec_time:
        type: integer
      mev_block_relays:
        type: string
      min_exec_time:
        type: integer
      parent_root:
        type: string
      proposer:
        type: integer
      proposer_name:
        type: string
      proposer_slashing_count:
        type: integer
      recv_delay:
        type: integer
      scheduled:
        type: boolean
      slot:
        type: integer
      state_root:
        type: string
      status:
        type: string
      sync_aggregate_participation:
        type: number
      time:
        type: string
      with_eth_block:
        type: boolean
    type: object
  api.APISlotResponse:
    properties:
      data:
        $ref: '#/definitions/api.APISlotData'
      status:
        type: string
    type: object
  api.APISlotsData:
    properties:
      next_slot:
        type: integer
      slots:
        items:
          $ref: '#/definitions/api.APISlotListItem'
        type: array
      total_count:
        type: integer
    type: object
  api.APISlotsResponse:
    properties:
      data:
        $ref: '#/definitions/api.APISlotsData'
      status:
        type: string
    type: object
  api.ApiResponse:
    properties:
      data: {}
      status:
        type: string
    type: object
  api.ApiValidatorDepositsResponseV1:
    properties:
      amount:
        type: integer
      block_number:
        type: integer
      block_ts:
        type: integer
      from_address:
        type: string
      merkletree_index:
        type: string
      publickey:
        type: string
      removed:
        type: boolean
      signature:
        type: string
      tx_hash:
        type: string
      tx_index:
        type: integer
      tx_input:
        type: string
      valid_signature:
        type: boolean
      withdrawal_credentials:
        type: string
    type: object
  api.ApiValidatorEth1ResponseV1:
    properties:
      public_key:
        type: string
      valid_signature:
        type: boolean
      validator_index:
        type: integer
    type: object
  api.ApiValidatorRequestV1:
    properties:
      indicesOrPubkey:
        type: string
    type: object
  api.ApiValidatorResponseV1:
    properties:
      activationeligibilityepoch:
        type: integer
      activationepoch:
        type: integer
      balance:
        type: integer
      effectivebalance:
        type: integer
      exitepoch:
        type: integer
      isonline:
        type: boolean
      name:
        type: string
      pubkey:
        type: string
      slashed:
        type: boolean
      status:
        type: string
      validatorindex:
        type: integer
      withdrawableepoch:
        type: integer
      withdrawalcredentials:
        type: string
    type: object
  api.ApiWithdrawalCredentialsResponseV1:
    properties:
      publickey:
        type: string
      validatorindex:
        type: integer
    type: object
  api.SlotResult:
    properties:
      error:
        type: string
      total_columns:
        type: integer
      valid_column_count:
        type: integer
    type: object
  models.ExecutionTimeDetail:
    properties:
      avg_time:
        type: integer
      client_type:
        type: string
      count:
        type: integer
      max_time:
        type: integer
      min_time:
        type: integer
    type: object
info:
  contact: {}
  description: This is the API documentation for the Dora Explorer application.
  title: Dora Explorer API
  version: "1.0"
paths:
  /v1/clients/consensus:
    get:
      consumes:
      - application/json
      description: Returns a list of all connected consensus clients with their node
        information, including PeerDAS support. Sensitive information (PeerID, NodeID,
        ENR) is only included if ShowSensitivePeerInfos is enabled in the configuration.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.APIConsensusClientsResponse'
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get consensus clients information
      tags:
      - clients
  /v1/clients/execution:
    get:
      consumes:
      - application/json
      description: Returns a list of all connected execution clients with their node
        information. Sensitive information (IP addresses, ports, enode) is only included
        if ShowSensitivePeerInfos is enabled in the configuration.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.APIExecutionClientsResponse'
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get execution clients information
      tags:
      - clients
  /v1/das-guardian/mass-scan:
    post:
      consumes:
      - application/json
      description: Performs DAS Guardian scans on all available consensus client nodes
        in parallel
      parameters:
      - description: Mass scan parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.APIDasGuardianMassScanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.APIDasGuardianMassScanResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Scan all nodes using DAS Guardian
      tags:
      - das-guardian
  /v1/das-guardian/scan:
    post:
      consumes:
      - application/json
      description: Performs a comprehensive scan of a beacon node using eth-das-guardian
        to check P2P connectivity, fork digest validity, head accuracy, and custody
        information
      parameters:
      - description: Node ENR to scan
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.APIDasGuardianScanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.APIDasGuardianScanResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Scan a node using DAS Guardian
      tags:
      - das-guardian
  /v1/epoch/{epoch}:
    get:
      description: Returns information for a specified epoch by the epoch number or
        an epoch tag (can be latest or finalized)
      parameters:
      - description: Epoch number, the string latest or the string finalized
        in: path
        name: epoch
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/api.APIEpochResponseV1'
              type: object
        "400":
          description: Failure
          schema:
            $ref: '#/definitions/api.ApiResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/api.ApiResponse'
      summary: Get epoch by number, latest, finalized
      tags:
      - Epoch
  /v1/slot/{slotOrHash}:
    get:
      description: Returns detailed information about a specific slot from the database.
        Accepts either slot number or block root (0x-prefixed hex)
      parameters:
      - description: Slot number or block root (0x-prefixed hex)
        in: path
        name: slotOrHash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.APISlotResponse'
        "400":
          description: Invalid slot number or root format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Slot not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get slot information
      tags:
      - Slot
  /v1/slots:
    get:
      description: Returns a list of slots with various filtering options, sorted
        by slot number descending
      parameters:
      - description: Filter by graffiti
        in: query
        name: graffiti
        type: string
      - description: Invert graffiti filter
        in: query
        name: graffiti_invert
        type: boolean
      - description: Filter by extra data
        in: query
        name: extra_data
        type: string
      - description: Invert extra data filter
        in: query
        name: extra_data_invert
        type: boolean
      - description: Filter by proposer index
        in: query
        name: proposer
        type: string
      - description: Filter by proposer name
        in: query
        name: proposer_name
        type: string
      - description: Invert proposer filter
        in: query
        name: proposer_invert
        type: boolean
      - description: Include orphaned blocks (0=exclude, 1=include, 2=only orphaned)
        in: query
        name: with_orphaned
        type: integer
      - description: Include missing blocks (0=exclude, 1=include, 2=only missing)
        in: query
        name: with_missing
        type: integer
      - description: Minimum sync aggregate participation (0-100)
        in: query
        name: min_sync
        type: number
      - description: Maximum sync aggregate participation (0-100)
        in: query
        name: max_sync
        type: number
      - description: Minimum execution time in ms
        in: query
        name: min_exec_time
        type: integer
      - description: Maximum execution time in ms
        in: query
        name: max_exec_time
        type: integer
      - description: Minimum transaction count
        in: query
        name: min_tx_count
        type: integer
      - description: Maximum transaction count
        in: query
        name: max_tx_count
        type: integer
      - description: Minimum blob count
        in: query
        name: min_blob_count
        type: integer
      - description: Maximum blob count
        in: query
        name: max_blob_count
        type: integer
      - description: Comma-separated list of fork IDs
        in: query
        name: fork_ids
        type: string
      - description: Start slot for pagination (inclusive)
        in: query
        name: start_slot
        type: integer
      - description: Number of results to return (max 100, default 100)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.APISlotsResponse'
        "400":
          description: Invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get filtered slots list
      tags:
      - Slot
  /v1/validator:
    post:
      description: This POST endpoint exists because the GET endpoint can lead to
        a "URI too long" error when searching for too many validators based on their
        pubkeys.
      parameters:
      - description: Up to 100 validator indicesOrPubkeys, comma separated
        in: body
        name: indexOrPubkey
        required: true
        schema:
          $ref: '#/definitions/api.ApiValidatorRequestV1'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/api.ApiValidatorResponseV1'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ApiResponse'
      summary: Get up to 100 validators
      tags:
      - Validator
  /v1/validator/{indexOrPubkey}:
    get:
      description: Searching for too many validators based on their pubkeys will lead
        to a "URI too long" error
      parameters:
      - description: Up to 100 validator indicesOrPubkeys, comma separated
        in: path
        name: indexOrPubkey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/api.ApiValidatorResponseV1'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ApiResponse'
      summary: Get up to 100 validators
      tags:
      - Validator
  /v1/validator/{indexOrPubkey}/deposits:
    get:
      description: Get all eth1 deposits for up to 100 validators
      parameters:
      - description: Up to 100 validator indicesOrPubkeys, comma separated
        in: path
        name: indexOrPubkey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/api.ApiValidatorDepositsResponseV1'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ApiResponse'
      summary: Get validator execution layer deposits
      tags:
      - Validators
  /v1/validator/eth1/{eth1address}:
    get:
      parameters:
      - description: Eth1 address from which the validator deposits were sent
        in: path
        name: eth1address
        required: true
        type: string
      - description: 'Limit the number of results (default: 2000)'
        in: query
        name: limit
        type: string
      - description: 'Offset the results (default: 0)'
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/api.ApiValidatorEth1ResponseV1'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ApiResponse'
      summary: Get all validators that belong to an eth1 address
      tags:
      - Validator
  /v1/validator/withdrawalCredentials/{withdrawalCredentialsOrEth1address}:
    get:
      parameters:
      - description: Provide a withdrawal credential or an eth1 address with an optional
          0x prefix
        in: path
        name: withdrawalCredentialsOrEth1address
        required: true
        type: string
      - default: 10
        description: 'Limit the number of results, maximum: 200'
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset the number of results
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/api.ApiWithdrawalCredentialsResponseV1'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ApiResponse'
      summary: Get all validators that have a specific withdrawal credentials
      tags:
      - Validator
schemes:
- http
- https
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
tags:
- description: Validator related endpoints
  name: Validator
- description: Epoch related endpoints
  name: Epoch
- description: Client information endpoints
  name: clients
